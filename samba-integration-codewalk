samba-integration/centos_ci:/samba-integration-centos-ci-tests.sh
makes test directory, 
cds into test directory
Clones samba-integration/ and cds into it, checks out the PR branch if provided.
Within the tests/samba-integration/ directory of the main tests,
Calls "make -C vagrant setup.cluster" - which is defined in the Makefile in the vagrant directory for samba-integration/master(or the PR branch)

samba-integration/master:/vagrant/Makefile (This is within the test directory of the original test)
The make targets are as follows.
/vagrant/Makefile: 
	setup.cluster: setup.prep setup.test.only setup.cluster.only
		setup.prep: local setup.prep.only
			local: - @ansible-playbook --inventory localhost, local.yml
			setup.prep.only: - @ansible-playbook --inventory=$(INVENTORY) setup.prep.yml
		setup.test.only: - @ansible-playbook --inventory=$(INVENTORY) setup.test.yml
		setup.cluster.only: - @ansible-playbook --inventory=$(INVENTORY) setup.run.yml
In effect, the commands run are
# ansible-playbook --inventory localhost, local.yml
# ansible-playbook --inventory=$(INVENTORY) setup.prep.yml
# ansible-playbook --inventory=$(INVENTORY) setup.test.yml
# ansible-playbook --inventory=$(INVENTORY) setup.run.yml
Where $(INVENTORY) expands to ./vagrant_ansible_inventory

Playbooks/roles - These playbooks are in the ./vagrant/ directory.
local.yml: - Run on the localhost
	local.vagrant:
		Calls Vagrant up - This creates the vms we require and doesn't provision. It then calls vagrant provision to call the no-op ansible yml file.
	local.prep:
		On the local machine, Copies over the vagrant ansible inventory file to ./ansible, modifies it to add ssh options.
		Also generates a ssh-config file used by vagrant to ./ansible/ssh-config-setup.
setup.prep.yml: - Run on the setup machine
	setup.prep:
		Updates packages to latest.
		Enable EPEL repo and gluster-ansible copr.
		Install gluster-ansible.
		Copies over ./ansible directory from local to setup machine.
		Copies over config file and ensures correct permissions on ssh-key.
		ie. Ensures the local machine is ready to remotely manage the new vms using ansible.
setup.test.yml: - Run on the setup machine
	setup.test:
		Check to see if ansible can connect to test machine.
			test.local.yml:
				local.test:
					Call /bin/true
setup.run.yml: Run on setup machine
	setup.run:
		Call ansible-playbook ./ansible/setup-cluster.yml to setup the test machines.	





